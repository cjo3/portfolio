service:
  name: ${env:SLS_SERVICE_NAME}

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${self:custom.stage}
  region: ${env:REGION}
  stackName: ${env:SLS_SERVICE_NAME}
  endpointType: regional
  role: ${env:ACCESS_ROLE}
  deploymentBucket:
    name: ${env:SLS_SERVICE_NAME}
    deploymentPrefix: serverless
  httpApi:
    name: ${env:SLS_SERVICE_NAME}
    payload: '2.0'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3.ListObjects
        - s3:GetObject
        - s3:PutObject
        - kms:Decrypt
      Resource:
        # - arn:aws:s3:${env:CDN_BUCKET}
        - arn:aws:s3:${env:PRERENDERS_BUCKET}
    # - Effect: Allow
    #   Action:
    #     - dynamodb:DeleteItem
    #     - dynamodb:GetItem
    #     - dynamodb:PutItem
    #     - dynamodb:Query
    #     - dynamodb:Scan
    #     - dynamodb:UpdateItem
    #   Resource:
    #     - arn:aws:dynamodb:${env:REGION}:*:table/${env:RENDERS_TABLE_NAME}

functions:
  generateAppPageHandler:
    name: ${env:SLS_SERVICE_NAME}-generateAppPageHandler
    handler: v1/handlers.generateAppPageHandler
    events:
      - httpApi:
          path: /
          method: POST

configValidationMode: warn

plugins:
  - serverless-dotenv-plugin
  - serverless-webpack
  - serverless-offline
  - serverless-domain-manager

custom:
  stage: ${env:NODE_ENV}
  domains:
    production: ${env:BASE_DOMAIN}
    staging: sta-${env:BASE_DOMAIN}
    development: dev-${env:BASE_DOMAIN}
  dotenv:
    logging: false
  serverless-offline:
    httpPort: ${env:SLS_OFFLINE_PORT}
    noPrependStageInUrl: true
    resourceRoutes: false
  webpack:
    webpackConfig: webpackConfig.js
    packager: yarn
    includeModules:
      forceExclude:
        - aws-sdk
    keepOutputDirectory: true
  customDomain:
    domainName: ${self:custom.domains.${self:custom.stage}}
    stage: ${env:NODE_ENV}
    basePath: ${env:SLS_SERVICE_NAME}
    endpointType: regional
    apiType: http
    autoDomain: true

# resources:
#   Resources:
#     renders:
#       Type: AWS::DynamoDB::Table
#       Properties:
#         TableName: ${env:RENDERS_TABLE_NAME}
#         AttributeDefinitions:
#           - AttributeName: app
#             AttributeType: S
#           - AttributeName: path
#             AttributeType: S
#         KeySchema:
#           - AttributeName: app
#             KeyType: HASH
#           - AttributeName: path
#             KeyType: range
#         ProvisionedThroughput:
#           ReadCapacityUnits: 5
#           WriteCapacityUnits: 1