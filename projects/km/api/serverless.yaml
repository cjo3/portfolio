service:
  name: ${env:SLS_SERVICE_NAME}

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${self:custom.stage}
  region: ${env:AWS_REGION}
  stackName: ${env:SLS_SERVICE_NAME}Stack
  endpointType: regional
  role: ${env:AWS_ACCESS_ROLE}
  httpApi:
    name: ${env:AWS_HTTPAPI_NAME}
    payload: '2.0'
    cors:
      allowedOrigins:
        - ${env:CORS_LOCAL_ORIGIN}
      allowedHeaders:
        - Content-Type
        - Authorization
      allowedMethods:
        - GET
        - POST
      allowCredentials: true
      maxAge: 6000
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DeleteItem
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:UpdateItem
      Resource:
        - arn:aws:dynamodb:${env:AWS_REGION}:*:table/${env:TRIALS_TABLE_NAME}

functions:
  createTrialHandler:
    name: ${env:SLS_SERVICE_NAME}-createTrialHandler
    handler: v1/index.createTrialHandler
    events:
      - httpApi:
          path: ${env:TRIALS_PATH}
          method: POST
  getMetaHandler:
    name: ${env:SLS_SERVICE_NAME}-getMetaHandler
    handler: v1/index.getMetaHandler
    events:
      - httpApi:
          path: /ke
          method: GET
  getVolumesHandler:
    name: ${env:SLS_SERVICE_NAME}-getVolumesHandler
    handler: v1/index.getVolumesHandler
    events:
      - httpApi:
          path: /ke
          method: POST
  preOrderHandler:
    name: ${env:SLS_SERVICE_NAME}-preOrderHandler
    handler: v1/index.preOrderHandler
    events:
      - httpApi:
          path: /ke/pre-order
          method: POST
  lowCreditsAlertHandler:
    name: ${env:SLS_SERVICE_NAME}-lowCreditsAlertHandler
    handler: v1/index.lowCreditsAlertHandler
    events:
      - httpApi:
          path: /ke/low-credits
          method: POST
      - sns:
          arn: ${env:SNS_ARN}

configValidationMode: warn

plugins:
  - serverless-dotenv-plugin
  - serverless-webpack
  - serverless-offline
  - serverless-domain-manager

custom:
  stage: ${env:NODE_ENV}
  domains:
    production: ${env:BASE_URL}
    staging: sta-${env:BASE_URL}
    development: dev-${env:BASE_URL}
  dotenv:
    logging: false
  serverless-offline:
    httpPort: ${env:SLS_OFFLINE_PORT}
    noPrependStageInUrl: true
    resourceRoutes: true
  webpack:
    webpackConfig: webpackConfig.js
    packager: yarn
    includeModules:
      forceExclude:
        - aws-sdk
    keepOutputDirectory: true
  customDomain:
    stage: ${self:custom.stage}
    domainName: ${self:custom.domains.${self:custom.stage}}
    basePath: ${env:BASE_API_URL}
    endpointType: regional
    apiType: http
    autoDomain: true

resources:
  Resources:
    kmTrials:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:TRIALS_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 1

